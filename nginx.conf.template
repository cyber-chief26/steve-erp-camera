worker_processes 1;

events {
    worker_connections 1024;
}

# =========================================================
#  RTMP SERVER (for ingest)
# =========================================================
rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        # Accept any camera key under /live/<camera_id>
        application live {
            live on;
            record off;

            # Use variable path for each camera stream
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3;
            hls_playlist_length 30;
            hls_nested on;            # creates /tmp/hls/<camera_id> folders automatically
            hls_cleanup off;

            # Optional: allow both ffmpeg push and OBS
            allow publish all;
            allow play all;
        }
    }
}

# =========================================================
#  HTTP SERVER (for playback + diagnostics)
# =========================================================
http {
    server {
        listen ${PORT};
        server_name _;

        # Serve all generated HLS files
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # Optional: simple index for testing
        location / {
            default_type text/plain;
            return 200 "âœ… Multi-camera RTMP + HLS relay is active.\n
Push stream example:
  ffmpeg -f mjpeg -i http://<ip>:8080/video -c:v libx264 -preset ultrafast -f flv rtmp://${HOSTNAME}:1935/live/reception
Watch stream:
  https://${HOSTNAME}/hls/reception/reception.m3u8
";
        }
    }
}
